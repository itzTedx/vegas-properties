/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    properties: Property;
    agents: Agent;
    media: Media;
    developers: Developer;
    users: User;
    'guest-sessions': GuestSession;
    bookmarks: Bookmark;
    specialties: Specialty;
    'service-areas': ServiceArea;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    properties: PropertiesSelect<false> | PropertiesSelect<true>;
    agents: AgentsSelect<false> | AgentsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    developers: DevelopersSelect<false> | DevelopersSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'guest-sessions': GuestSessionsSelect<false> | GuestSessionsSelect<true>;
    bookmarks: BookmarksSelect<false> | BookmarksSelect<true>;
    specialties: SpecialtiesSelect<false> | SpecialtiesSelect<true>;
    'service-areas': ServiceAreasSelect<false> | ServiceAreasSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties".
 */
export interface Property {
  id: number;
  /**
   * URL-friendly version of the title
   */
  slug?: string | null;
  title: string;
  /**
   * Short property overview
   */
  description?: string | null;
  image: number | Media;
  propertyDetails: {
    location: string;
    developer?: (number | null) | Developer;
    /**
     * Number of bedrooms
     */
    bedrooms: number;
    /**
     * Number of bathrooms
     */
    bathrooms?: number | null;
    /**
     * Property area in square feet
     */
    area?: number | null;
    propertyType: 'commercial' | 'apartment' | 'house' | 'villa' | 'townhouse';
    other?:
      | {
          label: string;
          value: string;
          id?: string | null;
        }[]
      | null;
  };
  pricing: {
    salePrice?: number | null;
    rentalPrice?: number | null;
    priceUnit?: ('month' | 'year') | null;
    priceType: 'sale' | 'rent' | 'lease' | 'both';
  };
  overview?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Key features of the property
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Key amenities of the property
   */
  amenities?:
    | {
        amenity: string;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Property images
   */
  gallery: (number | Media)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
    keyword?: string | null;
  };
  status: 'offPlan' | 'available' | 'sold' | 'rented' | 'under_contract' | 'plot' | 'coming_soon';
  /**
   * Feature this property prominently
   */
  isFeatured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Describe this image for accessibility
   */
  alt?: string | null;
  /**
   * Optional caption for this image
   */
  caption?: string | null;
  blurDataUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "developers".
 */
export interface Developer {
  id: number;
  title: string;
  logo: number | Media;
  description?: string | null;
  website?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agents".
 */
export interface Agent {
  id: number;
  photo?: (number | null) | Media;
  name: string;
  /**
   * e.g., Realtor, Senior Agent
   */
  title?: string | null;
  contact?: {
    licenseNumber?: string | null;
    phonePrimary?: string | null;
    phoneSecondary?: string | null;
    email?: string | null;
    whatsAppNumber?: string | null;
    /**
     * Add links or handles for Instagram, LinkedIn, etc.
     */
    socials?:
      | {
          platform:
            | 'website'
            | 'facebook'
            | 'instagram'
            | 'linkedin'
            | 'twitter'
            | 'youtube'
            | 'tiktok'
            | 'whatsapp'
            | 'snapchat'
            | 'telegram';
          handle?: string | null;
          url: string;
          id?: string | null;
        }[]
      | null;
  };
  professional?: {
    experienceYears?: number | null;
    awards?: string | null;
    mlsNumber?: string | null;
    languages?:
      | {
          language?: string | null;
          id?: string | null;
        }[]
      | null;
    specialties?: (number | Specialty)[] | null;
    serviceAreas?: (number | ServiceArea)[] | null;
  };
  about?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * URL-friendly version of the name
   */
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "specialties".
 */
export interface Specialty {
  id: number;
  title: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-areas".
 */
export interface ServiceArea {
  id: number;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guest-sessions".
 */
export interface GuestSession {
  id: number;
  /**
   * Anonymous session identifier stored in client cookie
   */
  sessionId: string;
  favorites?: (number | Property)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookmarks".
 */
export interface Bookmark {
  id: number;
  sessionId: string;
  property: number | Property;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'properties';
    value: number | Property;
  };
  slug?: string | null;
  target?: {
    collection?: ('properties' | 'developers' | 'media') | null;
    id?: string | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  property?: {
    location?: string | null;
    propertyType?: string | null;
    priceType?: string | null;
    developerTitle?: string | null;
  };
  developer?: {
    website?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'properties';
        value: number | Property;
      } | null)
    | ({
        relationTo: 'agents';
        value: number | Agent;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'developers';
        value: number | Developer;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'guest-sessions';
        value: number | GuestSession;
      } | null)
    | ({
        relationTo: 'bookmarks';
        value: number | Bookmark;
      } | null)
    | ({
        relationTo: 'specialties';
        value: number | Specialty;
      } | null)
    | ({
        relationTo: 'service-areas';
        value: number | ServiceArea;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties_select".
 */
export interface PropertiesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  description?: T;
  image?: T;
  propertyDetails?:
    | T
    | {
        location?: T;
        developer?: T;
        bedrooms?: T;
        bathrooms?: T;
        area?: T;
        propertyType?: T;
        other?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
      };
  pricing?:
    | T
    | {
        salePrice?: T;
        rentalPrice?: T;
        priceUnit?: T;
        priceType?: T;
      };
  overview?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  amenities?:
    | T
    | {
        amenity?: T;
        image?: T;
        id?: T;
      };
  gallery?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        keyword?: T;
      };
  status?: T;
  isFeatured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "agents_select".
 */
export interface AgentsSelect<T extends boolean = true> {
  photo?: T;
  name?: T;
  title?: T;
  contact?:
    | T
    | {
        licenseNumber?: T;
        phonePrimary?: T;
        phoneSecondary?: T;
        email?: T;
        whatsAppNumber?: T;
        socials?:
          | T
          | {
              platform?: T;
              handle?: T;
              url?: T;
              id?: T;
            };
      };
  professional?:
    | T
    | {
        experienceYears?: T;
        awards?: T;
        mlsNumber?: T;
        languages?:
          | T
          | {
              language?: T;
              id?: T;
            };
        specialties?: T;
        serviceAreas?: T;
      };
  about?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  blurDataUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "developers_select".
 */
export interface DevelopersSelect<T extends boolean = true> {
  title?: T;
  logo?: T;
  description?: T;
  website?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guest-sessions_select".
 */
export interface GuestSessionsSelect<T extends boolean = true> {
  sessionId?: T;
  favorites?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookmarks_select".
 */
export interface BookmarksSelect<T extends boolean = true> {
  sessionId?: T;
  property?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "specialties_select".
 */
export interface SpecialtiesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-areas_select".
 */
export interface ServiceAreasSelect<T extends boolean = true> {
  title?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  target?:
    | T
    | {
        collection?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  property?:
    | T
    | {
        location?: T;
        propertyType?: T;
        priceType?: T;
        developerTitle?: T;
      };
  developer?:
    | T
    | {
        website?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}